<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace对应接口全类名 -->
<mapper namespace="name.cdd.product.fitlog.dao.FitDao">
    <!-- id要与接口中方法名保持一致,入参要入接口方法中入参类型保持一致，返回值要与实体类对应
    （一下这种方式要求表中的字段按驼峰命名规则转换后要与实体类中属性名称保持一致） -->
<!--    每天原始数据-->
    <select id="queryDailyLogs"  resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        select d.id, d.fit_date as fitDate,
            adddate(fit_date, 0- date_format(fit_date,'%w')) as weekStart,
            adddate(fit_date, 6-date_format(fit_date,'%w')) as weekEnd,
            DATE_FORMAT(fit_date, '%Y-%m') as yearMonth,
             t.type, t.subtype, d.groups, d.times as times, d.load,
             cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10)) as scores,
             d.subtype_id as subtypeId, t.weight
                    from fit_daily_log d
                    left join fit_type t on d.subtype_id=t.id
                <if test='fitDate != null and fitDate != ""'>
                    where fit_date = #{fitDate}
                </if>
                    order by d.fit_date
                <if test='limitNum != null and limitNum != ""'>
                    desc limit #{limitNum}
                </if>
    </select>

<!--    全部-总计 天数 组数 次数 分数-->
    <select id="queryFitSummary" resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        select count(distinct(d.fit_date)) as dates,sum(d.groups) as groups,
        sum(d.groups * d.times) as times, sum(cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10))) as scores
        from fit_daily_log d left join fit_type t on d.subtype_id=t.id
        <if test='sinceDate != null and sinceDate != ""'>
            where d.fit_date >= #{sinceDate}
        </if>
    </select>

    <!--    全部  子种类的组数和次数-->
    <select id="queryFitSummaryBySubtype" resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        select t.type, t.subtype, sum(d.groups) as groups, sum(d.groups * d.times) as times,
            sum(cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10))) as scores
            from fit_daily_log d
            left join fit_type t on d.subtype_id=t.id
            where 1=1
            <if test='sinceDate != null and sinceDate != ""'>
                and d.fit_date >= #{sinceDate}
            </if>
            group by t.subtype
    </select>

<!--    全部-饼图-->
    <select id="queryScoresByType" resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        select t.type, sum(cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10))) as scores from fit_daily_log d left join fit_type t on d.subtype_id=t.id
        where 1=1
        <if test='sinceDate != null and sinceDate != ""'>
            and d.fit_date >= #{sinceDate}
        </if>
        <if test='endDate != null and endDate != ""'>
            <![CDATA[ and d.fit_date <= #{endDate}]]>
        </if>
        group by t.type order by scores desc
    </select>

<!--    每天总组数、次数、分数、天数-->
    <select id="queryStatsDailyLogs" resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        select d.fit_date as fitDate,
        count(distinct(fit_date)) as dates,
        sum(d.groups) as groups,
        sum(d.groups * d.times) as times,
        sum(cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10))) as scores
                from fit_daily_log d
                left join fit_type t on d.subtype_id=t.id
                group by d.fit_date order by d.fit_date
    </select>

<!--    每天每子种类 组数、次数-->
    <select id="queryStatsDailyLogsBySubtype" resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        select d.fit_date, t.type, t.subtype,
            sum(d.groups) as groups,
            sum(d.groups * d.times) as times,
            sum(cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10))) as scores,
            format(sum(d.groups * d.times * d.load)/sum(d.groups * d.times), 1) as load_avg
            from fit_daily_log d
            left join fit_type t on d.subtype_id=t.id
            group by d.fit_date, t.subtype
    </select>

<!--    每周总组数、次数、分数、周数、天数、周起止日期-->
    <select id="queryStatsWeeklyLogs" resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
       select DATE_FORMAT(adddate(fit_date,  1), '%Y%u') as week,
            adddate(fit_date, 0- date_format(fit_date,'%w')) as weekStart,
            adddate(fit_date, 6-date_format(fit_date,'%w')) as weekEnd,
            count(distinct(fit_date)) as dates,
            sum(d.groups) as groups, sum(d.groups * d.times) as times,
            sum(cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10))) as scores
                from fit_daily_log d
                left join fit_type t on d.subtype_id=t.id
                group by weekStart order by week
    </select>

<!--    每周每子种类 组数、次数-->
    <select id="queryStatsWeeklyLogsBySubtype" resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
       select DATE_FORMAT(adddate(fit_date,  1), '%Y%u') as week,
            adddate(fit_date, 0- date_format(fit_date,'%w')) as weekStart,
            adddate(fit_date, 6-date_format(fit_date,'%w')) as weekEnd,
            t.type, t.subtype,
            sum(d.groups) as groups,
            sum(d.groups * d.times) as times,
            sum(cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10))) as scores,
            format(sum(d.groups * d.times * d.load)/sum(d.groups * d.times), 1) as load_avg
                from fit_daily_log d
                left join fit_type t on d.subtype_id=t.id
                group by t.subtype, week
                order by week
    </select>


<!--    每月总组数、次数、分数、月数、月份-->
    <select id="queryStatsMonthlyLogs"  resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        select DATE_FORMAT(fit_date, '%Y-%m') as yearMonth,
           count(distinct(fit_date)) as dates,
            sum(d.groups) as groups,
            sum(d.groups * d.times) as times,
            sum(cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10))) as scores
                from fit_daily_log d
                left join fit_type t on d.subtype_id=t.id
                group by yearMonth order by yearMonth
    </select>

    <!--    每月总组数、次数、分数、月数、月份-->
    <select id="queryStatsMonthlyLogsBySutype"  resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        select DATE_FORMAT(fit_date, '%Y-%m') as yearMonth,
                t.type, t.subtype,
                sum(d.groups) as groups,
                sum(d.groups * d.times) as times,
                sum(cast(d.groups * d.times * t.weight * (1+(d.load-t.load_base)/10*t.load_p) as DECIMAL(10))) as scores,
                format(sum(d.groups * d.times * d.load)/sum(d.groups * d.times), 1) as load_avg
                from fit_daily_log d
                left join fit_type t on d.subtype_id=t.id
                group by t.subtype, yearMonth
                order by yearMonth
    </select>

    <delete id="deleteByDate" parameterType="java.lang.String">
        delete from fit_daily_log where fit_date=#{fitDate}
    </delete>

    <insert id="insert" parameterType="name.cdd.product.fitlog.pojo.FitDailyLog" >
         <![CDATA[ insert into fit_daily_log (fit_date, subtype_id, groups, times, `load`) values(#{fitDate},#{subtypeId},#{groups},#{times},#{load}) ]]>
    </insert>

    <select id="queryFitTypes" resultType="name.cdd.product.fitlog.pojo.FitType">
        select * from fit_type
    </select>

    <update id="updateById" parameterType="name.cdd.product.fitlog.pojo.FitDailyLog">
         <![CDATA[ update fit_daily_log set subtype_id=#{subtypeId}, fit_date=#{fitDate}, groups=#{groups}, times=#{times}, `load`=#{load} where id=#{id} ]]>
    </update>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from fit_daily_log where id=#{id}
    </delete>

    <select id="queryAllStar3" resultType="name.cdd.product.fitlog.pojo.FitStar">
        select min(d.fit_date) as fitDate, 3 as stars,
               t.subtype, t.type, d.subtype_id
        from fit_daily_log d
                 left join fit_type t on d.subtype_id=t.id
        where d.`groups` >= t.groups_s3  and d.times >= t.times_s3
        group by t.subtype order by fitDate
    </select>

    <!--star2 不包含直接跳3-->
    <select id="queryAllStar2" resultType="name.cdd.product.fitlog.pojo.FitStar">
        select min(d.fit_date) as fitDate, 2 as stars,
               t.subtype, t.type, d.subtype_id
        from fit_daily_log d
                 left join fit_type t on d.subtype_id=t.id
        where (d.`groups` >= t.groups_s2  and d.times >= t.times_s2) and not (d.`groups` >= t.groups_s3  and d.times >= t.times_s3)
        group by t.subtype order by fitDate
    </select>

<!--    star1 不包含直接跳2 3-->
    <select id="queryAllStar1" resultType="name.cdd.product.fitlog.pojo.FitStar">
        select min(d.fit_date) as fitDate, 1 as stars,
               t.subtype, t.type, d.subtype_id
        from fit_daily_log d
                 left join fit_type t on d.subtype_id=t.id
        where (d.`groups` >= t.groups_s1  and d.times >= t.times_s1) and not (d.`groups` >= t.groups_s2  and d.times >= t.times_s2)
        group by t.subtype order by fitDate
    </select>

    <select id="queryVersions" resultType="name.cdd.product.fitlog.pojo.Version">
        select version, version_date, content from versions order by version_date desc
    </select>

    <select id="queryFitPhases" resultType="name.cdd.product.fitlog.pojo.FitPhase">
        select id, start_date, end_date, short_desc, is_shown from fit_phase where is_shown order by start_date
    </select>

    <select id="queryNotEndedFitPhases" resultType="name.cdd.product.fitlog.pojo.FitPhase">
         select start_date, short_desc from fit_phase where is_shown and end_date is null order by start_date desc
    </select>

    <select id="queryFirstFitDate"  resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        select fit_date from fit_daily_log order by fit_date limit 1
    </select>

    <select id="queryLastByTypes" resultType="name.cdd.product.fitlog.pojo.FitDailyLog">
        <![CDATA[
       select fit_date as fitDate, subType_id as subtypeId, groups, times, `load`  from fit_daily_log d
        where fit_date in (
        select tt.fit_date from (
        select fit_date from fit_daily_log where fit_date < #{beforeDate} and subtype_id in (select t.id from fit_type t where type = #{type})       order by fit_date desc limit 1) tt)
        and subtype_id in (select t2.id from fit_type t2 where type = #{type}) ]]>

    </select>


</mapper>